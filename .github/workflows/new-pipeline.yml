name: Full React Docker Pipeline

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  IMAGE_NAME: react-app
  IMAGE_TAG: latest

jobs:
  full-pipeline:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # Step 3: Install dependencies and build React app
      - name: Install dependencies and build app
        run: |
          npm install
          npm run build

      # Step 4: SonarCloud Scan
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # Step 5: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 6: Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .

      # Step 7: Push Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      # Step 8: Pull image back from Docker Hub (simulate fresh run)
      - name: Pull image from Docker Hub
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      # Step 9: Run the Docker container
      - name: Run Docker container on port 8080
        run: |
          docker run -d -p 8080:80 --name react-app-container ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          sleep 5

      # Step 10: Verify the app is running
      - name: Test if app is responding
        run: |
          curl -s --fail http://localhost:8080 || {
            echo "App failed to respond";
            docker logs react-app-container;
            exit 1;
          }

      # Step 11: Show logs and running containers
      - name: Show logs and running containers
        run: |
          docker ps
          docker logs react-app-container
