name: Full React Docker Pipeline with Monitoring

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  IMAGE_NAME: react-app
  IMAGE_TAG: latest

jobs:
  full-pipeline:
    runs-on: [atharv-runner]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies and build app
        run: |
          npm install
          npm run build

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          args: >
            -Dsonar.organization=0019atharv
            -Dsonar.projectKey=0019atharv_demo-react-app
            -Dsonar.sources=src
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Pull image from Docker Hub
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Run React App Container
        run: |
          docker run -d -p 8080:80 --name react-app-container ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          sleep 5

      - name: Test if app is responding
        run: |
          curl -s --fail http://localhost:8080 || {
            echo "App failed to respond";
            docker logs react-app-container;
            exit 1;
          }

      - name: Show logs and running containers
        run: |
          docker ps
          docker logs react-app-container

      - name: Run cAdvisor
        run: |
          docker run -d \
            --name=cadvisor \
            --volume=/:/rootfs:ro \
            --volume=/var/run:/var/run:ro \
            --volume=/sys:/sys:ro \
            --volume=/var/lib/docker/:/var/lib/docker:ro \
            --publish=8081:8080 \
            --detach=true \
            --device=/dev/kmsg \
            gcr.io/cadvisor/cadvisor:latest

      - name: Run Prometheus
        run: |
          docker run -d \
            --name=prometheus \
            -p 9090:9090 \
            -v ${{ github.workspace }}/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml \
            prom/prometheus

      - name: Run Grafana
        run: |
          docker run -d \
            --name=grafana \
            -p 3000:3000 \
            -v ${{ github.workspace }}/monitoring/grafana/provisioning:/etc/grafana/provisioning \
            -e GF_SECURITY_ADMIN_PASSWORD=admin \
            grafana/grafana

      - name: Show monitoring URLs
        run: |
          echo "✅ Prometheus: http://localhost:9090"
          echo "✅ Grafana:    http://localhost:3000 (admin/admin)"
